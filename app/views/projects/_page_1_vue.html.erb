<script>
  Vue.component('v-select', VueSelect.VueSelect)
  
  let ptype = new Vue({
    el: '.prj_type',
    data: <%= fill_vue_data(@project,
     {
      model: 'project',
      project_type_id: @project.project_type&.id,
      projectTypeOutChange: false,  
      stages: [],
      list_values: 'project_type city client executor visualer project_type style pstatus client project_stage stage',
      lists: "project_types+simple cities executors users visualers styles pstatuses clients project_stages+project_type_id"      
    }, 'page1') %>,

    created() {
      this.fillStages()
      this.stage = this.project_stage
      console.log('this.city', this.city, )
      let users = this.users.filter(u => u.city_id == this.city)
    },

    watch: {
      project_type(newValue){
        if (footages.project_type_id > 0 && this.project_type != undefined) 
          if (!this.projectTypeOutChange) footages.setProjectType(this.project_type)
        
        this.projectTypeOutChange = false
        this.fillStages(newValue)
      },

      city() {
        if (footages.city_id > 0 && this.city != undefined) footages.setCity(this.city)
      }
    },

    methods: {
      fillStages(project_type = undefined){
        if (project_type == undefined) project_type = this.project_type
        if (typeof(project_type) == "object") project_type = project_type.value
        // console.log('fillStages project_type', project_type)

        this.stages.length = 0
        let st = this.project_stages.filter( ps => ps.project_type_id == project_type)
        // console.log('fillStages st', st)
        for (var s in st) {this.stages.push(st[s])}
      },

      setProjectType(pt) {
        this.projectTypeOutChange = true
        this.project_type = pt
      },
    }

  });

</script>