<script>
  Vue.component('v-select', VueSelect.VueSelect)
  
  let footages = new Vue({
    el: '.prj_footage',
    data: <%= fill_vue_data(@project,
     {
      model: "project",
      formValid: false,
      focus: '',
      discount: 0,
      toggled: false,
      m_sum_total: 0,
      show_2: @project.footage_2>0,
      show_fact: @project.footage_real>0,
      fact_filled: false,
      noteValid: "tooltip from Vue.js",
      complexProjectType: false,
      formFields: "footage price",
      
      required: ['project_type', 'client', 'executor', 'address'],
      fieldsTranslated: ['тип проекта', 'клиент', 'дизайнер', 'адрес'],

      lists: "clients cities executors visualers project_types+simple",
      list_values: "",
      texts: "address comment \
              footage price sum sum_total project_type\
              footage_2 price_2 sum_2\
              footage_real price_real sum_real sum_total_real \
              footage_2_real price_2_real sum_2_real\
              designer_price designer_price_2 designer_sum\
              visualer_price visualer_sum sum_total_executor\
              sum_rest",

      booleans: 'isNewProject'
    },'page2') %>,

    created() {
      console.log('created')
      if (!this.isNewProject && ptype.project_type !==undefined 
                             && ptype.project_type.value!== undefined ){
        // console.log("this.project_types", this.project_types, ptype.project_type.value)
        currentPType = this.project_types.find(e => e.value == ptype.project_type.value)
        this.complexProjectType = !currentPType.simple
      }

      if (this.complexProjectType)
        this.m_sum_total = parseInt(this["sum"]) + parseInt(this["sum_2"])
      else
        this.m_sum_total = this.sum_total

      this.calcDiscount(true)
      this.calcRest()
    },

    updated(){
      //console.log("updated");
    },

    mounted(){
      this.$root.$on('onInput', this.onInput);
    },

    watch: {
      footage(){
        this.calcSum("footage", "price")
      }, 
      footage_2(){
        this.calcSum("footage_2", "price_2", "sum_2")
      },
      footage_real(){
        this.fact_filled = this.footage_real>0;
        if (this.price_real === 0 ) this.price_real = this.price;
        this.calcSum("footage_real", "price_real", "sum_real")
      }, 
      footage_2_real(){
        
        if (this.price_2_real === 0 ) this.price_2_real = this.price_2;
        this.calcSum("footage_2_real", "price_2_real", "sum_2_real")
      },


      price(){
        this.calcSum("footage", "price")
      },
      price_2(){
        this.calcSum("footage_2", "price_2", "sum_2")
      },
      price_real(){
        this.calcSum("footage_real", "price_real", "sum_real")
      },
      price_2_real(){
        this.calcSum("footage_2_real", "price_2_real", "sum_2_real")
      },


      sum(){
        this.calcPrice();
        this.calcTotal();
      },
      
      sum_2(){
        this.calcPrice("_2");
        this.calcTotal();
      },

      sum_total(){
        if (this.focus.includes('total')){
          if (this.complexProjectType)
            this.m_sum_total = parseInt(this["sum"]) + parseInt(this["sum_2"]);
          else
            this.m_sum_total = this.sum_total;
        }
        this.calcRest();
      },

      designer_price(){
         this.calcSumExecutor();
      },

      designer_price_2(){
        // console.log("designer_price_2")
         // this.designer_sum = this.designer_price * this.mFloat("footage");
        this.designer_sum = this.designer_price_2 * this.mFloat("footage_2")
        this.calcSumExecutor();
      },

      visualer_price(){
        this.visualer_sum = this.visualer_price * this.mFloat("footage");
         this.calcSumExecutor();
      },
      
      project_type(){
        this.complexProjectType = this.project_type === undefined ? true : !this.project_type.simple;
        setTimeout(()=>{apply_mask();}, 300);
      },

    },
    methods: 
    {
      onInput(){
        let valid = true;
        let tooltip = "";
        this.required.forEach( (c, i) => {
          if (v_nil(this[c])) {
            valid = false;
            tooltip = tooltip + this.fieldsTranslated[i] + ', '
          }
        });


        
        this.formValid = valid;
        if (tooltip.trim().length > 0) tooltip = "Не заполнены поля: " + tooltip.slice(0, -2)
        this.noteValid = tooltip;
      },

      onSubmit(event){
        if (event && !this.formValid) {
          event.preventDefault();
          show_ajax_message(this.noteValid, 'error');
        }
        if (!this.complexProjectType){
          // чистим поля          
        }
      },

      mFloat(name){
          return parseInt(this[name]*100) / 100;
      },

      calcSum(footage, price, sum = "sum"){
        if (!this.focus.includes('sum')){
          this[sum] = this.mFloat(footage) * parseInt(this[price]);
        }

        if (this.focus.includes('real')){this.calcTotal("_real");}
        else{this.calcTotal();}
        
      },

      calcTotal(real = ""){
        if (!this.focus.includes('sum_total') && this.complexProjectType){ 
          sum2 = toInt(this["sum_2"+real])
          // if (isNaN(sum2)) sum2 = 0 
          
          this["sum_total"+real] = toInt(this["sum"+real]) + sum2;
          // if (isNaN(this["sum_total"+real])) this["sum_total"+real] = 0;

          if (this["sum_total"+real]>0) {
            this.m_sum_total = this["sum_total"+real];
            this["sum_total"+real] = this["sum_total"+real];
          }
        }

        this.calcRest();
      },

      calcPrice(num = ""){
        if (this.focus.includes('sum')){
          this["price"+num] = this.mFloat("sum"+num) / toInt(this["footage"+num]);
        }
      },

      calcDiscount(force = false){
        if (this.focus.includes('sum_discount') || this.focus.includes('sum_total') || force){ 
          this.discount = this.sum_discount / (this.m_sum_total) *100;
          this.calcTotal();
        }
      },

      calcSumExecutor(){
         this.designer_sum = toInt(this.designer_price) * this.mFloat("footage") + 
                             toInt(this.designer_price_2) * this.mFloat("footage_2");
        this.sum_total_executor = this.designer_sum + this.visualer_sum;
        this.calcRest();
      },

      calcRest(){
        this.sum_rest = this.m_sum_total - toInt(this.sum_total_executor);
      }
     }
  });

</script>