<% is_new = ['new','create'].include?(action_name) %>
<% is_author = current_user.author_of?(@absence) %>
<% @reopen = @absence.shops.size == 0 %>

<%= form_for(@absence) do |f| %>
<%= f.hidden_field :reopen, {action_name: action_name} %>

<% if !is_manager? %>
  <%= f.hidden_field :user_id, value: @absence.user_id ||= current_user.id %>
<% end %>

<%= render 'shared/error_messages', object: f.object %>
  
<div class="sample">
  <table class="tbl_fc tbl_fc_1">
    <tr><td class="caption">Причина:</td>
    <td  colspan="3">      
      <% if is_manager? || is_new || 
            (! @absence.created_at.nil? && @absence.user_id == current_user.id && 
              @absence.created_at > (Date.today-3.day) && @absence.new_reason_id.nil? ) %>

        <div class="inp_w">
          <v-chosen name="reason" model="absence" :value="reason" placeholder="Укажите причину..."/>   
        </div>
      <% else %>
        <div class="lbl"><%= @absence.reason_name %><%= f.hidden_field :reason_id %></div>
      <% end %>
    </td>
    <% if !is_new && !@reopen %>
      <td class="caption caption_sm">=></td>
        <td><div class="inp_w">
          <%= chosen_src 'new_reason_id', @reasons,@absence,{nil_value: 'Новая причина...'} %>
        </div></td>
    <% else %>
        <td colspan="2">
        </td>
    <% end -%>
    
    </tr>
    
  <transition name="slide"> 
      <tr v-if="equals(reason,[2,3])" transition="bounce">
      <td class="caption p_obj">Проект:</td>
      <td colspan="3" class="p_obj">
      <div class="inp_w">
        <v-chosen name="project" model="absence" :value="project" placeholder="Укажите объект..."/></div>
      </div></td>
      <template v-if="equals(reason,2)">
        <td class="caption caption_sm"><span>Цель:</span></td>
        <td><span>
          <v-chosen name="target" model="absence" :value="target" placeholder="Укажите цель..."/> 
        </span></td>
      </template>
    </tr>
  </transition>
  

    <tr><td class="caption">Дата c:</td>
      <td width='200px;'><div class="inp_">
        <%= f.text_field :dt_from, value: @dt_from, label: false, class: "txt datepicker" %></div></td>
      <td class="caption caption_to"><%= f.hidden_field :checked, "v-model"=>"checked" %>
        <span class="check_img" v-bind:class="{ checked: checked }" id='dt_to_check' @click="check_to"></span> по:</td>
      <td width='180px;'><div class="inp_">
        <%= f.text_field :dt_to, value: @dt_to, label: false, class: "txt datepicker", ":disabled"=>"!checked" %>
        </div></td>
      <td class="caption caption_sm">Время:</td>
      <td>
        <div class="inp_w"><%= f.text_field :t_from, value: @t_from, label: false, class: "txt timepicker" %></div>
        <span class="time_separator">–</span>
        <div class="inp_w"><%= f.text_field :t_to, value: @t_to, label: false, class: "txt timepicker" %></div></td>
      <td></td>
    </tr>

      <tr><td class="caption">Комментарий:</td>
        <td colspan="5"><div class="inp_w" >
          <%= f.text_area :comment, class: 'txt alone', label: false, "v-model"=>"comment" %></div></td></tr>
    <% if is_manager? %>
      <tr><td class="caption">Сотрудник:</td>
          <td width='490px;' colspan="3"><div class="inp_w" >
           <v-chosen name="user" model="absence" :value="user" placeholder="Выберите сотрудника..."/>
      </td></tr>

      <% if [@absence.reason_id, @absence.new_reason_id].include?(6) %>
        <tr><td></td><td class="caption caption_to"><div id='a_approved' class="left">
          
          <%= f.check_box :approved, class: 'inp_btn checkbox' %>
          <%= f.label :approved, "Согласовано" %>
          </div></td>
        </tr>
      <% end %>

    <% end %>
    
    <% if !is_new && is_author %>
      <tr><td></td><td class="caption caption_to"><div id='a_canceled' class="left">
        <%= f.check_box :canceled, class: 'inp_btn checkbox' %> 
        <%= f.label :canceled, "Отменено" %>
        </div></td>
      </tr>
    <% end %>
        
    

  </table>


<div class="sep_3"></div>
<transition name="bounce">
<template v-if="equals(reason,3)">
<div class='shops' id='dshops' >

    <%= render "shops" %>
    <div class="sep_3"></div>
    
</div>
</template>
</transition>

<% if is_manager? || is_new || is_author %>
  <%= submit_cancel absences_url, {disabled: "!f_valid"} %>
<% end %>

<% end %>
</div>
<script>
  Vue.component('v-select', VueSelect.VueSelect)

  let sample = new Vue({
    el: '.sample',
    data: 
    {
      comment: <%= @absence.comment %>,
      f_valid: true,
      f_shop: false,
      checked: <%= @checked %>,
      reason:  <%= v_value(@absence, "reason") %>,
      reasons: <%= select_src(@reasons) %>,
      project: <%= v_value(@absence, "project") %>,
      projects:<%= select_src(@projects) %>,
      target:  <%= v_value(@absence, "target") %>,
      targets: <%= select_src(@targets) %>,
      user:  <%= v_value(@absence, "user", nil, current_user) %>,
      users: <%= select_src(User.all) %>,
      new_shop:  null,
      new_shops: <%= select_src(Provider.all) %>,
      new_shop_target: null,
      new_shop_targets: <%= select_src(@shop_targets) %>,
      shops: <%= @absence.shops.map{|s| { id: s.id,
                  shop: {label: s.shop_name, value: s.shop_id}, 
                  target: {label: s.target_name, value: s.target_id},
                  _destroy: false} }.to_json.html_safe %>
    },
    updated(){
        this.input();
    },
    methods: {
      shop_field(index, field) {
        return "absence[shops_attributes]["+index+"]["+field+']'
      },
      check_to(){
        this.checked = !this.checked
      },
      add_shop(){
        if (this.new_shop_target!==null){
          
          let shop = this.new_shop === null ? {label: '*Другой*', value: null} : this.new_shop

          this.shops.push({shop: shop, target: this.new_shop_target, _destroy: false})
          this.new_shop_target = null 
          this.new_shop = null
        }
      },
      del_shop(index){
        this.shops[index]['_destroy'] = true
      },
      input(e){
        let f_shop = true;
        let f_valid = true;
        let reason = this.reason === undefined ? 0 : this.reason.value  

        switch(reason){
          case 0:
            f_valid = false; break;
          case 2:
            if (v_nil(this.project) || v_nil(this.target)){f_valid = false;} break;
          case 3:
            if (v_nil(this.project) || this.shops.filter(sh => !sh._destroy).length === 0){f_valid = false;} break;
          case 6:
            if ($('#absence_comment').val().length < 3) {f_valid = false;}
        }

        if (v_nil(this.new_shop_target)) f_shop = false;
        this.f_valid = f_valid;
        this.f_shop = f_shop;
      },
      equals(obj, v){      
        if (obj===null) {return false;} 
        if (v.constructor === Array) return v.includes(obj.value);
        return obj.value === v; 
      }
    }
  });

</script>