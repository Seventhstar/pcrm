<% is_new = ['new','create'].include?(action_name) %>
<% is_author = is_author_of?(@absence) %>

<%= form_for(@absence) do |f| %>

<% if !is_manager? %>
  <%= f.hidden_field :user_id, value: @absence.user_id ||= current_user.id %>
<% end %>

<%= render 'shared/error_messages', object: f.object %>
  
<div class="vue_app">

  <section class="grid_table">
    <div class="label_col">Причина:</div> 
    <div>
       <% if is_manager? || is_new || (@absence.new_reason_id.nil? &&
             is_author && allow_days_to_edit(@absence.created_at, 1)) %>
          <v-chosen name="reason" model="absence" :value="reason" placeholder="Укажите причину..."/>   
      <% else %>
        <div class="lbl">{{reason.label}}</div>
      <% end %>
    </div>
    <div class="label_col">=></div>
    <div>
      <% if !is_new %>
        <v-chosen name="new_reason" model="absence" :value="new_reason" placeholder="Новая причина..."/>
      <% end %>
    </div>
  </section>
  
  <transition name="slide-fade">
    <section class="grid_table" v-show="equals(reason,[2,3])">  
      <div class="label_col">Проект:</div> 
      <div :key="2">
        <v-chosen name="project" model="absence" :value="project" placeholder="Укажите объект..."/>
      </div>
      <transition name="slide-fade">
        <div class="label_col" v-show="equals(reason,2)">Цель:</div>
      </transition>
      <transition name="slide-fade">
        <div v-show="equals(reason,2)" >
          <v-chosen name="target" model="absence" :value="target" placeholder="Укажите цель..."/> 
        </div>
      </transition>
    </section>
  </transition>
    
  <section class="grid_table">
    <div class="label_col">Дата c:</div> 
    <div class="inp_">
      <%= f.text_field :dt_from, value: @dt_from, label: false, class: "txt datepicker left" %>
      <%= f.text_field :dt_to, value: @dt_to, label: false, class: "txt datepicker right", ":disabled"=>"!checked" %>
      <div class="caption_to"><m-checkbox v-model="checked" label="по:"/></div>
    </div>
    <div class="label_col">Время:</div> 
    <div>
      <div class="inp_w"><%= f.text_field :t_from, value: @t_from, label: false, class: "txt timepicker"%></div>
      <span class="time_separator">–</span>
      <div class="inp_w"><%= f.text_field :t_to, value: @t_to, label: false, class: "txt timepicker" %></div></td>
    </div>
  </section>

  <section class="grid_lbl_name">
    <div class="label_col">Комментарий:</div> 
    <%= f.text_area :comment, class: 'txt alone', label: false, "v-model"=>"comment", ":placeholder"=>"placeholder()" %>
  </section>

  <% if is_manager? %>
    <section class="grid_table">
      <div class="label_col">Сотрудник:</div> 
      <div>
        <v-chosen name="user" model="absence" :value="user" placeholder="Выберите сотрудника..."/>
      </div>
    </section>
    <div class="before160" v-if="equals(reason, 6) || equals(new_reason, 6)">
      <m-checkbox v-model="approved" name="approved" model="absence" label="Согласовано"/> 
    </div>
  <% end %>

  <% if !is_new && is_author %>
    <div class="before160">
      <m-checkbox v-model="canceled" name="canceled" model="absence" label="Отменено"/>
    </div> 
  <% end %>

  <transition name="bounce">
    <div class='shops before_30' id='dshops' v-if="equals(reason,3)">
        <%= render "shops" %>
    </div>
  </transition>

  <% if is_manager? || is_new || is_author %>
    <%= submit_cancel absences_url, {disabled: "!f_valid"} %>
  <% end %>

<% end %>
</div>

<script>
  Vue.component('v-select', VueSelect.VueSelect)

  let app = new Vue({
    el: '.vue_app',
    data: <%= fill_vue_data(@absence,
    {
      boleans: 'canceled approved f_valid f_shop',
      texts: 'comment new_shop new_shop_target',
      list_values: 'reason new_reason project target',
      lists: "reasons projects targets users \
              new_reasons:@reasons users:User.all \
              new_shops:Provider.all new_shop_targets:@shop_targets",
      checked: @checked,
      user:   v_value(@absence, "user", nil, current_user),
      shops:  @absence.shops.map{|s| { id: s.id,
                  shop: {label: s.shop_name, value: s.shop_id}, 
                  target: {label: s.target_name, value: s.target_id},
                  _destroy: false} } 
    }) %>,
    beforeCreate(){

    },
    updated(){
        this.input();
    },
    methods: {
      shop_field(index, field) {
        return "absence[shops_attributes]["+index+"]["+field+']'
      },

      placeholder(){ 
        return this.equals(this.reason,6) ? 'Обязательно укажите причину' : ''
      },

      check_to(){
        this.checked = !this.checked
      },

      add_shop(){
        if (this.new_shop_target!==null){
          let shop = this.new_shop === null ? {label: '*Другой*', value: null} : this.new_shop

          this.shops.push({shop: shop, target: this.new_shop_target, _destroy: false})
          this.new_shop_target = null 
          this.new_shop = null
        }
      },

      del_shop(index){
        this.shops[index]['_destroy'] = true
      },

      input(e){
        let f_shop = true;
        let f_valid = true;
        let reason = v_nil(this.reason) ? 0 : this.reason.value  

        switch(reason){
          case 0:
            f_valid = false; break;
          case 2:
            if (v_nil(this.project) || v_nil(this.target)){f_valid = false;} break;
          case 3:
            if (v_nil(this.project) || this.shops.filter(sh => !sh._destroy).length === 0){f_valid = false;} break;
          case 6:
            if ($('#absence_comment').val().length < 3) {f_valid = false;}
            
        }

        if (v_nil(this.new_shop_target)) f_shop = false;
        this.f_valid = f_valid;
        this.f_shop = f_shop;
      },

      equals(obj, v){      
        if (obj===null) {return false;} 
        if (v.constructor === Array) return v.includes(obj.value);
        return obj.value === v; 
      }
    }
  });

</script>